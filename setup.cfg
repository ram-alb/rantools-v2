[flake8]
# Base flake8 configuration:
format = wemake
statistics = False
doctests = True
enable-extensions = G
count = True
max-string-usages = 5
max-local-variables = 12
max-line-length = 100
max-asserts = 6
max-cognitive-score = 18
max-cognitive-average = 12
max-line-complexity = 18
max-methods = 10

# Plugins:
accept-encodings = utf-8
max-complexity = 6

# Exclude some directories:
exclude =
    neighbors/tests/conftest.py
    .git
    __pycache__
    migrations
    .venv
    network_live/tests/conftest.py

# Ignore some checks for Django's standard files:
per-file-ignores =
    config/*.py manage.py:
        # Found line with high Jones Complexity
        WPS221,
        # Found string constant over-use
        WPS226,
        # Found mutable module constant
        WPS407,
        # Found nested import
        WPS433,
        # Possible binding to all interfaces.
        S104

    neighbors/services/network_live/tables.py:
        # Possible SQL injection vector through string-based query construction.
        S608

    neighbors/services/reports/g2u_xml.py:
        # Found line with high Jones Complexity
        WPS221

    neighbors/services/reports/u2g_xml.py:
        # Found too many local variables
        WPS210
        # Found line with high Jones Complexity
        WPS221

    bts_files/services/nemo_nbf.py:
        # Found string literal over-use
        WPS226

    bts_files/services/excel.py:
        # Found protected attribute usage
        WPS437

    services/db/network_live.py:
        # Found wrong keyword: pass
        WPS420,
        # Found a getter without a return value
        WPS463

    __init__.py:
        # <something> imported but unused
        F401
    config/__init__.py:
        # Found wrong metadata variable: __all__
        WPS410

    users/apps.py:
    # Found nested import
        WPS433

    test_*.py:
        # Missing docstring in public method
        D102,
        # Argument name 'MockWcdmaTable' should be lowercase
        N803,
        # Use of assert detected
        S101,
        # Found wrong module name
        WPS100,
        # Found too many arguments
        WPS211,
        # Found string literal over-use
        WPS226,
        # Found nested function
        WPS430

    conftest.py:
        # Found nested function
        WPS430

    network_live_app/services/select.py:
        # Possible SQL injection vector through string-based query construction.
        S608

    */fixtures/*.py:
        # Found string literal over-use
        WPS226

ignore =
    # Too complex
    C901,
    # Missing parameter(s) in Docstring
    DAR101,
    # Missing "Returns" in Docstring
    DAR201,
    # Missing exception(s) in Raises section
    DAR401,
    # Missing docstring in public module
    D100,
    # Missing docstring in public package
    D104,
    # Missing docstring in public nested class
    D106,
    # Remove bad quotes
    Q000,
    # Found wrong module name
    WPS100,
    # Found upper-case constant in a class
    WPS115,
    # Found function with too much cognitive complexity
    WPS231,
    # Found `f` string
    WPS305,
    # Found class without a base class
    WPS306,
    # Found explicit string concatenation
    WPS336,
    # Found `__init__.py` module with logic
    WPS412,
    # Found protected attribute usage
    WPS437,
    #Found too many empty lines
    WPS473,
    # Line break before binary operator
    W503,
    # Found implicit `.get()` dict usage
    WPS529,
    # Found implicit string concatenation
    WPS326,
    # Found too many module members > 7
    WPS202

[isort]
multi_line_output = 3
include_trailing_comma = true
# Should be: max-line-length - 1
line_length = 99